{"version":3,"sources":["store/data.js","store/actions/index.js","components/OrdersBasket/index.jsx","App.js","store/reducers/index.js","index.js"],"names":["data","title","price","ADD_ORDER","DELETE_ORDER","Alert","props","elevation","variant","OrderBasket","orders","useSelector","state","dispatch","useDispatch","React","useState","open","setOpen","handleClick","handleClose","event","reason","style","styles","orderContainer","menuContainer","MenuList","map","el","id","Tooltip","MenuItem","onClick","type","payload","cursor","Button","basketContainer","length","count","sum","Skeleton","Snackbar","autoHideDuration","onClose","severity","display","justifyContent","width","App","className","defaultState","totalPrice","totalCount","store","createStore","action","items","localStorage","setItem","JSON","stringify","is_chosen","findIndex","item","arr","is_chosen2","deleteOrder","value","index","indexOf","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46a935fc.chunk.js","sourcesContent":["export const data = [\r\n{\r\n    title: 'Hamburger',\r\n    price: 80\r\n},\r\n{\r\n    title: 'Coffee',\r\n    price: 100\r\n},\r\n{\r\n    title: 'Cola',\r\n    price: 60\r\n},\r\n{\r\n    title: 'Tea',\r\n    price: 50\r\n},\r\n{\r\n    title: 'Cheeseburger',\r\n    price: 100\r\n},\r\n{\r\n    title: 'Fries',\r\n    price: 40\r\n}\r\n]","export const ADD_ORDER = 'ADD_ORDER'\r\nexport const DELETE_ORDER = 'DELETE_ORDER'\r\n\r\n//можно ещё вот таким образом написать\r\n// export const add_order = () => {\r\n//     return {\r\n//         type: ADD_ORDER\r\n//     }\r\n// }\r\n\r\nexport const add_order = (item) => ({\r\n    type: ADD_ORDER,\r\n    payload: item\r\n});\r\nexport const delete_order = (item) => ({\r\n    type: DELETE_ORDER,\r\n    payload: item\r\n})","import React from 'react';\r\nimport {data} from '../../store/data';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {add_order,delete_order} from '../../store/actions';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n//alert\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport const OrderBasket = () => {\r\n\r\n    const orders = useSelector(state => state.orders)\r\n    const dispatch = useDispatch()\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n    return <div style={styles.orderContainer}>\r\n        <div style={styles.menuContainer}>\r\n        \r\n            <h1>Menu</h1>\r\n            <MenuList>\r\n                {data.map((el,id) => {\r\n                    //Добавьте сюда событие onclick и отправьте объект в стор с помощью диспатч\r\n                    return <Tooltip title=\"Добавить в корзину\">\r\n                        <MenuItem onClick={() => dispatch(add_order(el))} style={{cursor: 'pointer'}} key={id}>\r\n                            {el.title} <b>{el.price}</b>\r\n                            <Button variant=\"outlined\" onClick={handleClick}>add</Button>\r\n                        </MenuItem>\r\n                    </Tooltip> \r\n                })}\r\n            </MenuList>\r\n        </div>\r\n        <div style={styles.basketContainer}>\r\n            <h1>Orders</h1>\r\n            <MenuList>\r\n                {\r\n                    //Здесь делаете рендеринг,вытащив ключ из стора, который называется orders\r\n                    orders.length ? orders.map((el,id) => {\r\n                        return <MenuItem key={id}>\r\n                            <span>{el.title}</span>\r\n                            <b>:{el.price} * {el.count} = {el.sum}</b>\r\n                            <span onClick={() => dispatch(delete_order(el))}>\r\n                                <DeleteIcon />\r\n                            </span>\r\n                        </MenuItem>\r\n                    })\r\n                        : <div>\r\n                            <Skeleton />\r\n                            <Skeleton />\r\n                            <Skeleton />\r\n                        </div>\r\n                }\r\n            </MenuList>\r\n        </div>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n                Заказ успешно добавлен!\r\n            </Alert>\r\n      </Snackbar>\r\n    </div>\r\n}\r\nconst styles = {\r\n    orderContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    menuContainer: {\r\n        width: '50%',\r\n    },\r\n    basketContainer: {\r\n        width: '50%',\r\n    },\r\n}","import './App.css';\nimport {OrderBasket} from './components/OrdersBasket'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <OrderBasket/>\n    </div>\n  );\n}\n\nexport default App;\n","import {ADD_ORDER,DELETE_ORDER} from '../actions'\r\n\r\nconst defaultState = {\r\n    orders: [],\r\n    totalPrice: 0,\r\n    totalCount: 0\r\n}\r\n\r\nexport const rootReducer = (state = defaultState,action) => {\r\n    let items = localStorage.setItem('orders',JSON.stringify(state.orders))\r\n    switch(action.type){\r\n        case ADD_ORDER:\r\n            //findIndex\r\n            let is_chosen = state.orders.findIndex(\r\n                (item) => item.title === action.payload.title\r\n            );\r\n            if(is_chosen !== -1){\r\n                //делаем копию ключа orders из store\r\n                let arr = [...state.orders];\r\n                //В orders с помощью индекса is_chosen находим нужный нам элемент и перезаписываем ключ count\r\n                arr[is_chosen].count = arr[is_chosen].count +1;\r\n                arr[is_chosen].sum = arr[is_chosen].sum +action.payload.price;\r\n                return {\r\n                    ...state,\r\n                    orders: arr,\r\n                    items\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    orders: [\r\n                        ...state.orders,\r\n                    {\r\n                        title: action.payload.title,\r\n                        price: action.payload.price,\r\n                        count: 1,\r\n                        sum: action.payload.price\r\n                    },\r\n                ],\r\n            }\r\n        }\r\n        case DELETE_ORDER:\r\n            let arr = [...state.orders];\r\n            let is_chosen2 = state.orders.findIndex(\r\n                (item) => item.title === action.payload.title\r\n            );\r\n            function deleteOrder(arr, value) { \r\n                let index = arr.indexOf(value);\r\n                if (index > -1) {\r\n                    arr.splice(index, 1);\r\n                }\r\n                return arr;\r\n            }\r\n            if(action.payload.count < 2) {\r\n            deleteOrder(state.orders, state.orders[is_chosen2])\r\n            return {\r\n               ...state,\r\n               orders: [\r\n                 ...state.orders,\r\n               ],\r\n             };\r\n            } else {\r\n            arr[is_chosen2].count = arr[is_chosen2].count -1;\r\n            arr[is_chosen2].sum = arr[is_chosen2].sum - action.payload.price;\r\n            return {\r\n                ...state,\r\n                orders: arr,\r\n                items\r\n            }; \r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport {rootReducer} from './store/reducers'\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}